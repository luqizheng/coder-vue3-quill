"ant-design-table-ajax-list": {
    "prefix": "coderAxiosList",
    "body": [
      "<template>",
      "  <a-card :bordered=\"false\">",
      "    <a-form layout=\"inline\" :label-col=\"{ span: 5 }\">",
      "      <a-form-item label=\"名称：\">",
      "        <a-input",
      "          v-model:value=\"searcherForm.processName\"",
      "          placeholder=\"名称\"",
      "        ></a-input>",
      "      </a-form-item>",
      "",
      "      <a-form-item>",
      "        <a-space>",
      "          <a-button type=\"primary\" @click=\"onSearch\"",
      "            ><SearchOutlined />查询</a-button",
      "          >",
      "          <slot name=\"form\"></slot>",
      "        </a-space>",
      "      </a-form-item>",
      "    </a-form>",
      "  </a-card>",
      "  <a-card>",
      "    <a-table",
      "      rowKey=\"id\"",
      "      :dataSource=\"dataSource\"",
      "      :columns=\"columns\"",
      "      :loading=\"loading\"",
      "      :pagination=\"pagination\"",
      "      @change=\"onPagerChanged\"",
      "    >",
      "      <template #action=\"{ record }\">",
      "        <a-space>",
      "          <a-button",
      "            v-show=\"record.publish\"",
      "            type=\"primary\"",
      "            @click=\"() => onCreateProcessInstance(record.name)\"",
      "          >",
      "            创建",
      "          </a-button>",
      "",
      "          <slot name=\"operator\" :record=\"record\"></slot>",
      "        </a-space>",
      "      </template>",
      "",
      "      <template #publish=\"{ record }\">",
      "        {{ record.publish ? \"已发布\" : \"草稿\" }}",
      "      </template>",
      "    </a-table>",
      "  </a-card>",
      "</template>",
      "",
      "<script setup lang=\"ts\">",
      "import { inject, reactive, toRaw, ref, computed, onMounted } from \"vue\";",
      "import {",
      "  message,",
      "  Input as AInput,",
      "  Space as ASpace,",
      "  Button as AButton,",
      "  Table as ATable,",
      "  Card as ACard,",
      "  Form as AForm,",
      "  FormItem as AFormItem,",
      "  Divider as ADivider,",
      "  PaginationProps,",
      "  Modal,",
      "} from \"ant-design-vue\";",
      "",
      "import {",
      "  EditOutlined,",
      "  UnorderedListOutlined,",
      "  PlusOutlined,",
      "  SearchOutlined,",
      "  LoginOutlined,",
      "} from \"@ant-design/icons-vue\";",
      "import columnDefine from \"./columns\"; //TODO:导入column",
      "import { injectIptionsKey, SwfOptions } from \"../types/SwfOption\";",
      "import {",
      "  WorkProcessListItem,",
      "  WorkProcessPermissionSearch,",
      "  WorkProcessPermissionViewModel,",
      "  WorkProcessSearcher,",
      "} from \"../types/workProcessListItem\";",
      "import { CreateProcessInstanceSubmit } from \"../types\";",
      "const props = defineProps({",
      "  userName: {",
      "    type: String,",
      "  },",
      "  hasCreate: {",
      "    type: Boolean,",
      "    value: false,",
      "  },",
      "});",
      "const columns = reactive(columnDefine);",
      "const total = ref(0);",
      "const option = inject(injectIptionsKey) as SwfOptions;",
      "const emits = defineEmits([\"add\", \"edit\", \"dispose\"]);",
      "const searcherForm = reactive({",
      "  page: 1,",
      "  pageSize: 40,",
      "  processName: \"\",",
      "} as WorkProcessPermissionSearch);",
      "const loading = ref(false);",
      "const dataSource = reactive([] as Array<WorkProcessPermissionViewModel>);",
      "const pagination = computed(() => {",
      "  return {",
      "    total: total.value,",
      "    pageSize: toRaw(searcherForm.pageSize),",
      "    current: toRaw(searcherForm.page),",
      "  };",
      "});",
      "const onSearch = () => {",
      "  searcherForm.page = 1;",
      "  reload();",
      "};",
      "",
      "const onPagerChanged = (pagination: PaginationProps) => {",
      "  if (pagination.pageSize) searcherForm.pageSize = pagination.pageSize;",
      "  if (pagination.current) searcherForm.page = pagination.current;",
      "  reload();",
      "};",
      "",
      "const reload = () => {",
      "  const api = option.workProcessApi;",
      "  loading.value = true;",
      "  let t1 = api.listWorkProcess(toRaw(searcherForm)).then((resp) => {",
      "    dataSource.splice(0);",
      "    dataSource.push(...resp.data);",
      "  });",
      "  let t2 = api.coutWorkProcess(toRaw(searcherForm)).then((resp) => {",
      "    total.value = resp.data;",
      "  });",
      "",
      "  Promise.all([t1, t2]).then(() => {",
      "    loading.value = false;",
      "  });",
      "};",
      "const onDelete = (id: number) => {",
      "  const api = option.defineApi;",
      "  api.delWorkProcess(id).then((resp) => {",
      "    message.info(resp.data.message);",
      "    reload();",
      "  });",
      "};",
      "onMounted(() => {",
      "  reload();",
      "});",
      "",
      "/**",
      " * 创建流程实例",
      " */",
      "",
      "const onCreateProcessInstance = (processsName: string) => {",
      "  option.workflowApi",
      "    .create({",
      "      workProcessName: processsName,",
      "      start: true,",
      "    } as CreateProcessInstanceSubmit)",
      "",
      "    .then((resp) => {",
      "      if (",
      "        !resp.data.success ||",
      "        (resp.data.startResult != null &&",
      "          resp.data.startResult.success == false)",
      "      ) {",
      "        Modal.info({",
      "          title: () => \"错误\",",
      "          content: () =>",
      "            resp.data.message ||",
      "            (resp.data.startResult != null",
      "              ? resp.data.startResult.message",
      "              : \"\"),",
      "        });",
      "      }",
      "",
      "      if (resp.data.startResult.success) {",
      "        resp.data.startResult.workActivities.forEach((el) => {",
      "          if (el.disposeUser == props.userName) {",
      "            emits(\"dispose\", el.workActivityId);",
      "            return false;",
      "          }",
      "        });",
      "      }",
      "    });",
      "};",
      "</script>",
      ""
    ],
    "description": "ant-design-table-ajax-list"
  }