{
	"ant-design table编辑": {
		"prefix": "coderEditTable",
		"body": [
		  "<template>",
		  "  <div>",
		  "    <a-card :bordered=\"false\">",
		  "      <a-form layout=\"inline\" :label-col=\"{ span: 5 }\">",
		  "        <a-form-item label=\"名称：\">",
		  "          <a-input",
		  "            v-model:value=\"searcherForm.name\"",
		  "            placeholder=\"名称\"",
		  "          ></a-input>",
		  "        </a-form-item>",
		  "",
		  "        <a-form-item>",
		  "          <a-space>",
		  "            <a-button type=\"primary\" @click=\"onSearch\"",
		  "              ><SearchOutlined />查询</a-button",
		  "            >",
		  "            <a-button type=\"primary\" danger @click=\"onAdd\"",
		  "              ><PlusOutlined />新增</a-button",
		  "            >",
		  "          </a-space>",
		  "        </a-form-item>",
		  "      </a-form>",
		  "    </a-card>",
		  "    <a-card>",
		  "      <a-table",
		  "        rowKey=\"id\"",
		  "        :dataSource=\"dataSource\"",
		  "        :columns=\"columns\"",
		  "        :loading=\"loading\"",
		  "        :pagination=\"pagination\"",
		  "        @change=\"onPagerChanged\"",
		  "      >",
		  "        <template #action=\"{ record }\">",
		  "          <a-space>",
		  "            <a-button v-if=\"!record.edit\" @click=\"() => (record.edit = true)\"",
		  "              >编辑</a-button",
		  "            >",
		  "            <a-button",
		  "              v-if=\"!record.edit\"",
		  "              @click=\"onDelete(record)\"",
		  "              type=\"primary\"",
		  "              danger",
		  "              >删除</a-button",
		  "            >",
		  "            <a-button v-if=\"record.edit\" @click=\"onSave(record)\" type=\"primary\"",
		  "              >保存</a-button",
		  "            >",
		  "            <a-button v-if=\"record.edit\" @click=\"() => (record.edit = false)\"",
		  "              >取消</a-button",
		  "            >",
		  "          </a-space>",
		  "        </template>",
		  "",
		  "        <template #name=\"{ record }\">",
		  "          <span v-if=\"!record.edit\">{{ record.name }}</span>",
		  "          <a-input v-if=\"record.edit\" v-model:value=\"record.name\"></a-input>",
		  "        </template>",
		  "",
		  "        <template #content=\"{ record }\">",
		  "          <span v-if=\"!record.edit\">{{ record.content }}</span>",
		  "          <a-input v-if=\"record.edit\" v-model:value=\"record.content\"></a-input>",
		  "        </template>",
		  "      </a-table>",
		  "    </a-card>",
		  "  </div>",
		  "</template>",
		  "",
		  "<script setup>",
		  "import { inject, reactive, toRaw, ref, computed, onMounted } from \"vue\";",
		  "import {",
		  "  message,",
		  "  Input as AInput,",
		  "  Space as ASpace,",
		  "  Button as AButton,",
		  "  Popconfirm as APopconfirm,",
		  "  Table as ATable,",
		  "  Card as ACard,",
		  "  Form as AForm,",
		  "  FormItem as AFormItem,",
		  "  Divider as ADivider,",
		  "} from \"ant-design-vue\";",
		  "",
		  "import {",
		  "  EditOutlined,",
		  "  UnorderedListOutlined,",
		  "  PlusOutlined,",
		  "  SearchOutlined,",
		  "  LoginOutlined,",
		  "} from \"@ant-design/icons-vue\";",
		  "import columnDefine from \"./columns\"; //TODO:导入column",
		  "",
		  "const columns = reactive(columnDefine);",
		  "const total = ref(0);",
		  "const api = inject(\"CoderMiniProvider\").qrCodeRedirectApi;",
		  "const searcherForm = reactive({",
		  "  page: 1,",
		  "  pageSize: 40,",
		  "  name: \"\",",
		  "});",
		  "const loading = ref(false);",
		  "const dataSource = reactive([]);",
		  "const pagination = computed(() => {",
		  "  return {",
		  "    total: total.value,",
		  "    pageSize: toRaw(searcherForm.pageSize),",
		  "    current: toRaw(searcherForm.page),",
		  "  };",
		  "});",
		  "const onSearch = () => {",
		  "  searcherForm.page = 1;",
		  "  reload();",
		  "};",
		  "const onAdd = () => {",
		  "  dataSource.push({",
		  "    name: \"文件名称\",",
		  "    content: \"\",",
		  "    edit: true,",
		  "    id: 0,",
		  "  });",
		  "};",
		  "const onPagerChanged = (arg) => {",
		  "  console.log(arg);",
		  "};",
		  "",
		  "const onSave = (record) => {",
		  "  api.save(record).then((resp) => {",
		  "    if (resp.data.success) {",
		  "      record.id = resp.data.id;",
		  "      record.edit = false;",
		  "    }",
		  "",
		  "    message.info(resp.data.message);",
		  "  });",
		  "};",
		  "const onDelete = (record) => {",
		  "  api.del(record.id).then((resp) => {",
		  "    message.info(resp.data.message);",
		  "    if (resp.data.success) {",
		  "      reload();",
		  "    }",
		  "  });",
		  "};",
		  "const reload = () => {",
		  "  loading.value = true;",
		  "  let t1 = api.list(toRaw(searcherForm)).then((resp) => {",
		  "    dataSource.splice(0);",
		  "    for (var i = 0; i < resp.data.length; i++) {",
		  "      let item = resp.data[i];",
		  "      item.edit = false;",
		  "      dataSource.push(item);",
		  "    }",
		  "  });",
		  "  let t2 = api.count(toRaw(searcherForm)).then((resp) => {",
		  "    total.value = resp.data;",
		  "  });",
		  "",
		  "  Promise.all([t1, t2]).then(() => {",
		  "    loading.value = false;",
		  "  });",
		  "};",
		  "",
		  "onMounted(() => {",
		  "  reload();",
		  "});",
		  "</script>",
		  ""
		],
		"description": "ant-design table编辑"
	  },
}